name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-latest]
        build_type: [Debug, Release]
        compiler: [gcc g++, clang clang++]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get install libopenblas-dev libarmadillo-dev libyaml-cpp-dev lcov
            
    - name: Make build dir
      run: mkdir build 
    
    - name: Make install dir
      run: mkdir install
    
    - name: Configure
      run: > 
          export CC=$(echo  "${{ matrix.compiler }}" | cut -d' ' -f1) &&
          export CXX=$(echo "${{ matrix.compiler }}" | cut -d' ' -f2) &&
          cd build && 
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DENABLE_TESTING:BOOL=FALSE -DENABLE_COVERAGE:BOOL=FALSE -DCMAKE_INSTALL_PREFIX=../install ..

    - name: Build
      run: cd build && 
           cmake .. && 
           make install
   
    - name: Cleanall examples
      working-directory: ./examples
      run: ./cleanall.sh

    - name: Run Examples
      working-directory: ./examples
      run: ./runall.sh
    # run: >
    #     export KAPPA_DIRECTORY=$(pwd) &&
    #     export KAPPA_DATA_DIRECTORY=$KAPPA_DIRECTORY/data &&
    #     export LD_LIBRARY_PATH=$KAPPA_DIRECTORY/install/lib:$LD_LIBRARY_PATH &&
    #     cd build && 
    #     ctest
    
    #- name: Make Coverage
    #  run: cd build && 
    #       make coverage
          
    #- name: Run Codecov
    #  run: > 
    #      cd build && 
    #      bash <(curl -s https://codecov.io/bash) -f kappa++.info || echo "Codecov did not collect coverage reports"
